#!/usr/bin/env python
'''
Autogenerated code using arya
Original Object Document Input: 
{"vnsFolderInst":{"attributes":{"dn":"uni/tn-F5-demo/ap-Web/epg-SLB-Web-servers/FI_C-WebServices-G-HTTP_LB-F-ADC-N-LTM/FI_C-WebServices-G-HTTP_LB-F-ADC-N-WebServers/FI_C-WebServices-G-HTTP_LB-F-ADC-N-S3","ctrctNameOrLbl":"WebServices","graphNameOrLbl":"HTTP_LB","nodeNameOrLbl":"ADC","name":"S3","key":"Member","status":"created,modified"},"children":[]}}


raise RuntimeError('Please review the auto generated code before ' +
                    'executing the output. Some placeholders will ' +
                    'need to be changed')
'''

# list of packages that should be imported for this code to work
import cobra.mit.access
import cobra.mit.request
import cobra.mit.session
import cobra.model.fv
import cobra.model.pol
import cobra.model.vns
from cobra.internal.codec.xmlcodec import toXMLStr
import sys

# Get CLI arguments
if (len(sys.argv) != 8):
	print "I need 7 arguments: url, user, password, rulename, protocol, port number and ACE order"
	sys.exit(0)
else:
	# Get arguments
	apic_url = sys.argv[1]
	apic_usr = sys.argv[2]
	apic_pwd = sys.argv[3]
	aceName  = sys.argv[4]
	prot     = sys.argv[5]
	port     = sys.argv[6]
	order    = sys.argv[7]


# log into an APIC and create a directory object
ls = cobra.mit.session.LoginSession(apic_url, apic_usr, apic_pwd)
md = cobra.mit.access.MoDirectory(ls)
md.login()

# Constants
aclName      = u'access-list-inbound'
tenantName   = u'SiriusCyber'
ANPName      = u'Sirius-App1'
EPGName      = u'Tier1'
SGName       = u'Sirius-FE-SGT'
nodeName     = u'N1'
contractName = u'out-to-app1'

# the top level object on which operations will be made
polUni = cobra.model.pol.Uni('')
fvTenant = cobra.model.fv.Tenant(polUni, tenantName)
fvAp = cobra.model.fv.Ap(fvTenant, ANPName)
fvAEPg = cobra.model.fv.AEPg(fvAp, EPGName)

ACLFolder = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=SGName, devCtxLbl=u'', ctrctNameOrLbl=contractName, scopedBy=u'epg', key=u'AccessList', cardinality=u'unspecified', nodeNameOrLbl=nodeName, name=aclName)
ACEFolder = cobra.model.vns.FolderInst(ACLFolder, locked=u'no', graphNameOrLbl=SGName, devCtxLbl=u'', ctrctNameOrLbl=contractName, scopedBy=u'epg', key=u'AccessControlEntry', cardinality=u'unspecified', nodeNameOrLbl=nodeName, name=aceName)
permitParam = cobra.model.vns.ParamInst(ACEFolder, validation=u'', mandatory=u'no', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
orderParam = cobra.model.vns.ParamInst(ACEFolder, validation=u'', mandatory=u'no', name=u'order', value=order, key=u'order', locked=u'no', cardinality=u'unspecified')
protFolder = cobra.model.vns.FolderInst(ACEFolder, locked=u'no', graphNameOrLbl=SGName, devCtxLbl=u'', ctrctNameOrLbl=contractName, scopedBy=u'epg', key=u'protocol', cardinality=u'unspecified', nodeNameOrLbl=nodeName, name=prot)
protParam = cobra.model.vns.ParamInst(protFolder, validation=u'', mandatory=u'no', name=prot, value=prot, key=u'name_number', locked=u'no', cardinality=u'unspecified')
dstFolder = cobra.model.vns.FolderInst(ACEFolder, locked=u'no', graphNameOrLbl=SGName, devCtxLbl=u'', ctrctNameOrLbl=contractName, scopedBy=u'epg', key=u'destination_address', cardinality=u'unspecified', nodeNameOrLbl=nodeName, name=u'dest-address')
#dstParam = cobra.model.vns.ParamInst(dstFolder, validation=u'', mandatory=u'no', name=u'epg_name', value=tenantName + '-' + ANPName + '-' + EPGName, key=u'epg_name', locked=u'no', cardinality=u'unspecified')
dstParam = cobra.model.vns.ParamInst(dstFolder, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
srcFolder = cobra.model.vns.FolderInst(ACEFolder, locked=u'no', graphNameOrLbl=SGName, devCtxLbl=u'', ctrctNameOrLbl=contractName, scopedBy=u'epg', key=u'source_address', cardinality=u'unspecified', nodeNameOrLbl=nodeName, name=u'src-address')
srcParam = cobra.model.vns.ParamInst(srcFolder, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
dstSvcFolder = cobra.model.vns.FolderInst(ACEFolder, locked=u'no', graphNameOrLbl=SGName, devCtxLbl=u'', ctrctNameOrLbl=contractName, scopedBy=u'epg', key=u'destination_service', cardinality=u'unspecified', nodeNameOrLbl=nodeName, name=u'dest-service')
dstSvcOpParam = cobra.model.vns.ParamInst(dstSvcFolder, validation=u'', mandatory=u'no', name=u'op', value=u'eq', key=u'operator', locked=u'no', cardinality=u'unspecified')
dstSvcPortParam = cobra.model.vns.ParamInst(dstSvcFolder, validation=u'', mandatory=u'no', name=u'port', value=port, key=u'low_port', locked=u'no', cardinality=u'unspecified')

# commit the generated code to APIC
#print toXMLStr(ACEFolder)
c = cobra.mit.request.ConfigRequest()
c.addMo(ACEFolder)
md.commit(c)

